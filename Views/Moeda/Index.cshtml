@model IEnumerable<AspCoreGraficos.Models.Moeda>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Nova Moeda</a>
</p>
<!--
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantidade)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantidade)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.MoedaId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.MoedaId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.MoedaId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
-->

<div class="row">
    <div class="col-lg-6 card bg-light">
        @await Component.InvokeAsync("Moeda")
    </div>

    <div class="col-lg-6">
        <partial name="_Grafico" />
    </div>
</div>

<div id="test"></div>

<script src="~/lib/jquery/dist/jquery.js"></script>

<script>

    function pegarNomeMoeda(dados){
        var quantidade = 0;
        var moedas = [];

        while (quantidade < dados.length)
        {
            moedas.push(dados[quantidade].nome);
            quantidade++;
        }

        return moedas;
    }

    function pegarQuantidade(dados){

        var quantidade = 0;
        var valores = [];

        while (quantidade < dados.length)
        {
            valores.push(dados[quantidade].quantidade);
            quantidade++;
        }

        return valores;
    }

    function pegarCores(quantidade){

        var cores = [];

        while (quantidade >= 0)
        {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);

            cores.push("rgb(" + r + ", " + g + ", " + b + ")");

            quantidade--;
        }

        return cores;
    }

    $.ajax({
        type: "GET",
        url: "Moeda/DadosGrafico",
        success: function (dados) {
            new Chart(document.getElementById("grafico"), {
                type: 'pie',
                data: {
                    labels: pegarNomeMoeda(dados),
                    datasets: [{
                        labels: "Quantidade",
                        borderWidth: 2,
                        backgroundColor: pegarCores(dados.length),
                        data: pegarQuantidade(dados)
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Quantidade Moeda"
                    }
                }
            }); //colocar o ponto e virgula aqui
        }
    })

   /* $.ajax({
        type : "GET",
        url : "Moeda/DadosGrafico",
        success : function(dados){
            var res = document.getElementById("test");
        for(int i; i < dados.length; i++){    
		res.textContent = dados['nome']['quantidade'];
        }
        }
    })*/
</script>
